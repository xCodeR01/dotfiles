return {
  n = {
    ["gh"] = { "<cmd>Lspsaga lsp_finder<CR>", "LSP finder" },
    ["K"] = { "<cmd>Lspsaga hover_doc<CR>", "Hover doc" },
    ["gx"] = { "<Cmd>Lspsaga signature_help<CR>", "Signature help" },
    ["gd"] = { "<cmd>Lspsaga preview_definition<CR>", "Preview defintion" },
    ["gl"] = { "<cmd>Lspsaga show_line_diagnostics<CR>", "Show diagnostics" },
    ["gr"] = { "<cmd>Lspsaga rename<CR>", "LSP rename" },
    ["[d"] = { "<cmd>Lspsaga diagnostic_jump_prev<cr>", "Goto prev diagnostic" },
    ["]d"] = { "<cmd>Lspsaga diagnostic_jump_next<cr>", "Goto next diagnostic" },
    ["<C-u>"] = {
      "<cmd>lua require('lspsaga.action').smart_scroll_with_saga(2)",
      "Scroll up in saga",
    },
    ["<C-d>"] = {
      "<cmd>lua require('lspsaga.action').smart_scroll_with_saga(-2)",
      "Scroll down in saga",
    },
    ["<leader>l"] = { name = "LSP" },
    ["<leader>la"] = { "<cmd>Lspsaga code_action<CR>", "Code Actions" },
    ["<leader>ld"] = { "<cmd>Telescope diagnostics bufnr=0<cr>", "Document Diagnostics" },
    ["<leader>lf"] = { "<cmd>lua vim.lsp.buf.formatting{async=true}<CR>", " lsp formatting" },
    ["<leader>li"] = { "<cmd>LspInfo<cr>", "Info" },
    ["<leader>lI"] = { "<cmd>LspInstallInfo<cr>", "Installer Info" },
    ["<leader>ll"] = { "<cmd>lua vim.lsp.codelens.run()<cr>", "CodeLens Action" },
    ["<leader>lq"] = { "<cmd>lua vim.lsp.diagnostic.set_loclist()<cr>", "Quickfix" },
    ["<leader>ls"] = { "<cmd>Telescope lsp_document_symbols<cr>", "Document Symbols" },
    ["<leader>lS"] = { "<cmd>Telescope lsp_dynamic_workspace_symbols<cr>", "Workspace Symbols" },
    ["<leader>lw"] = { "<cmd>Telescope diagnostics<cr>", "Workspace Diagnostics" },
    ["<leader>lW"] = { "<cmd>lua vim.lsp.buf.add_workspace_folder()<CR>", " add workspace folder" },
    ["<leader>lR"] = { "<cmd>lua vim.lsp.buf.remove_workspace_folder()<CR>", " remove workspace folder" },
  },
  v = {
    ["<leader>la"] = { "<cmd><C-U>Lspsaga range_code_action<CR>", "Code Actions" },
  },
}
