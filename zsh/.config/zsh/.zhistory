git
git --a
qt
qt5
apt search qt5
sudo apt install apt-transport-https curl
sudo curl -fsSLo /usr/share/keyrings/brave-browser-archive-keyring.gpg https://brave-browser-apt-release.s3.brave.com/brave-browser-archive-keyring.gpg
echo "deb [signed-by=/usr/share/keyrings/brave-browser-archive-keyring.gpg arch=amd64] https://brave-browser-apt-release.s3.brave.com/ stable main"|sudo tee /etc/apt/sources.list.d/brave-browser-release.list
sudo apt update
sudo apt autoremove
clear
exit
warp
warp-svc --help
sudo warp-svc --help
clear
cd /etc
ls -l | grep warp
cd systemd
ls
ls -l
cd user
ls -l
sudo apt install lintian
python3 converter.py
pythoon converter.py
python converter.py
python2 converter.py
cd /lib/systemd
clear
ls
cd system
cat warp-svc.service
cd /etc/init.d
vi hwclock.sh
cat /lib/systemd/system/warp-svc.service
ls
cd /etc/init.d
ls
warp-cli connect
warp-cli disconnect
warp-cli register
warp-cli connect
sudo apt install brave-browser
apt search clawmail
apt search claw
apt search claw-mail
apt search claws-mail
sudo apt install claws-mail firacode
sudo apt install claws-mail fira-code
sudo apt install claws-mail firacode-f
apt search firacode
sudo apt install claws-mail fonts-firacode
cd /media/raven/Data
ls
mv backend /home/raven/Downloads
sudo chown -R raven:raven backend
sudo chown -R raven:raven devops
ls
sudo rm others tmp
sudo rm -r others tmp
clear
ls
ls -l
mv devops /home/raven/Downloads
ls
clear
cd /lib
clear
ls
cd systemd
clear
ls
ls -l
cd user
ls
find --help
ld
vlrst
vlrst
clear
cd ..
ls
find warp
find *warp*
clear
ls -l
cd system
clear
ls -l
vi warp-svc.service
cd
clear
cd Downloads
ls
cd /etc
clear
ls -l
cd services
clear
cd services
cd systemd
ls
vi sleep.conf
cd ..
ls -l
cd tor
clear
ls
ls -la
cd ..
sudo service tor
sudo service tor status
cd /etc/init.d
clear
ls
vi tor
vi ufw
ls
vi hostname.sh
mv /media/raven/Data/backend /home/raven/Downloads/
cp /media/raven/Data/backend /home/raven/Downloads/
cp -r /media/raven/Data/backend /home/raven/Downloads/
ls -l
cd backend
ls -l
warp-svc 
sudo warp-svc 
signout
reboot
sudo signout
sudo reboot
warp-cli connect
cd /etc/x11/
cd /etc/X11/xorg.conf.d
ls
sudo vi 20-intel.conf
ls
vi 20-synaptics.conf
sudo apt install compton
which compton
vi compton-lauch.sh
which compton-launch.sh
vi /usr/local/bin/compton-launch.sh
vi .config/compton.conf
sudo warp-svc 
warp-cli connect
warp-cli disconnect
sudo warp-swc
sudo warp-svc
curl -L https://sw.kovidgoyal.net/kitty/installer.sh | sh /dev/stdin
ping google.com
curl -L https://sw.kovidgoyal.net/kitty/installer.sh | sh /dev/stdin
cd .local
ls -l
cd kitty.app
ls -l
ln -s ~/.local/kitty.app/bin/kitty ~/.local/bin/
pwd
cd ..
clear
pwd
mkdir bin
ln -s ~/.local/kitty.app/bin/kitty ~/.local/bin/
cp ~/.local/kitty.app/share/applications/kitty.desktop ~/.local/share/applications/
sed -i "s|Icon=kitty|Icon=/home/$USER/.local/kitty.app/share/icons/hicolor/256x256/apps/kitty.png|g" ~/.local/share/applications/kitty.desktop
kitty
kitty
echo $PATH
wget -O - https://raw.githubusercontent.com/laurent22/joplin/dev/Joplin_install_and_update.sh | bash\

wget -O - https://raw.githubusercontent.com/laurent22/joplin/dev/Joplin_install_and_update.sh | bash\

wget -O - https://raw.githubusercontent.com/laurent22/joplin/dev/Joplin_install_and_update.sh | bash\
clear
clear
wget -O - https://raw.githubusercontent.com/laurent22/joplin/dev/Joplin_install_and_update.sh | bash\

cd .local
clear
ls
sudo apt install lunarvim
apt search lunar vim
apt search lunarvim
apt search lunar-vim
clear
vi ~/.zshenv
vi .zshenv
exit
echo $PATH
kitty --version
vi .zshenv
exit
echo $PATH
kitty --version
ls
ls
sudo mv FiraCode\ NF /usr/local/share/fonts
ls /usr/local/share/fonts
pwd
cd ~/.local
clear
ls
sudo mv bin/kitty /usr/local/bin 
cd /usr/share
ls -l
clear
cd applications
ls
clear
pwd
cd ~/.local/share/applications
ls
vi kitty.desktop
sudo mkdir /usr/local/share/applications
sudo mv kitty.desktop /usr/local/share/applications
vi kitty.desktop
vi ~/.zshenv
kitty --drop-down
echo "${ZDOTDIR:-$HOME}/.zprezto"
git clone --recursive https://github.com/sorin-ionescu/prezto.git "${ZDOTDIR:-$HOME}/.zprezto"\

git clone --recursive https://github.com/sorin-ionescu/prezto.git "${ZDOTDIR:-$HOME}/.zprezto"\

clear
cd ~/.config/zsh
ls -l
ls -a
vi .zshrc
cd .zprezto
ls -la
cd ..
clear
ls -a
vi .zpreztorc
prompt -l
prompt -p default
prompt -p cloud
ls
pwd
clear
vi .config/zsh/.zpreztorc
prompt
clear
prompt -l
prompt -p clint
prompt -p powerlevel10k
prompt -p powerline
prompt -p agnoster
vi .config/zsh/.zpreztorc
sleep 3
git clone --depth 1 git@github.com:dexpota/kitty-themes.git ~/.config/kitty/kitty-themes\

git clone --depth 1 git@github.com:dexpota/kitty-themes.git ~/.config/kitty/kitty-themes\

pwd
cd .config/kitty
clear
ls
ls -a
https://github.com/dexpota/kitty-themes.git
git clone https://github.com/dexpota/kitty-themes.git
ls
ln -s ./kitty-themes/themes/gruvbox_dark.conf ~/.config/kitty/theme.conf\

clear
vi kitty.conf
ls
vi theme.conf
rm theme.conf
vi kitty.conf
DKLJ
time
date
lkjsadfkljasdlkfjlasdkjflkjsdafkjlksdjaflksdjlakfjldsak
cd .config/kitty
ls
vi kitty.conf
ln -s ./kitty-themes/themes/gruvbox_dark.conf ~/.config/kitty/theme.conf
vi kitty.conf
vi ~/.config/zsh/.zpreztorc
vi kitty.conf
			ajsdf
		killall
clear
sudo
sudo date
clear
sudo warp-svc
warp-cli
warp-cli connect
warp-cli
clear
sleep 2
time sleep 4
time sleep 2
sleep 3
cd .config/zsh/.zprezto
clear
warp-cli connect
warp-cli connect
warp-cli connect
warp-cli connect
warp-cli disconnect
sudo warp-svc
warp-cli connect
warp-cli disconnect
warp-cli disconnect
sudo warp-svc
sudo apt update
sudo apt-get install \\
    ca-certificates \\
    curl \\
    gnupg \\
    lsb-release
 curl -fsSL https://download.docker.com/linux/debian/gpg | sudo gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg\

echo \\
  "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/debian \\
  $(lsb_release -cs) stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
clear
sudo apt update
sudo apt-get install docker-ce docker-ce-cli containerd.io
sudo apt-get install docker-ce docker-ce-cli containerd.io
docker -v
docker pull mongo
sudo docker pull mongo
sudo docker pull mongo
sudo docker pull mongodb
sudo docker pull mongo
sudo apt install pipenv
sudo apt install pipenv
pipenv install fastapi motor
/bin/python3 -m pip install -U flake8
pipenv check
pipenv env
pipenv
pipenv --venv
/home/raven/.config/local/share/virtualenvs/temp-it__8XpO/bin/python -m pip install -U flake8
/home/raven/.config/local/share/virtualenvs/temp-it__8XpO/bin/python -m pip install -U black
pipenv run uvicorn whitelist:app --reload
pipenv install uvicorn
pipenv run uvicorn whitelist:app --reload
pipenv run uvicorn whitelist:app --reload
pipenv run uvicorn whitelist:app --reload
pipenv run uvicorn whitelist:app --reload
pipenv run uvicorn whitelist:app --reload
pipenv run uvicorn whitelist:app --reload
docker run -d --name mongodb \\
    -e MONGO_INITDB_ROOT_USERNAME=mongoadmin \\
    -e MONGO_INITDB_ROOT_PASSWORD=secret \\
    mongo
sudo docker run -d --name mongodb \\
    -e MONGO_INITDB_ROOT_USERNAME=mongoadmin \\
    -e MONGO_INITDB_ROOT_PASSWORD=secret \\
    mongo
sudo docker ps
sudo docker stop mongo
sudo docker stop mongodb
sudo docker run -d -27017:27017 --name mongodb \\
    -e MONGO_INITDB_ROOT_USERNAME=mongoadmin \\
    -e MONGO_INITDB_ROOT_PASSWORD=secret \\
    mongo
sudo docker run -d -p 27017:27017 --name mongodb \\
    -e MONGO_INITDB_ROOT_USERNAME=mongoadmin \\
    -e MONGO_INITDB_ROOT_PASSWORD=secret \\
    mongo
sudo docker rm mongodb
clear
sudo docker run -d -p 27017:27017 --name mongodb \\
    -e MONGO_INITDB_ROOT_USERNAME=mongoadmin \\
    -e MONGO_INITDB_ROOT_PASSWORD=secret \\
    mongo
warp-cli connect
warp-cli disconnect
sudo warp-svc
warp-cli connect
warp-cli connect
warp-cli connect
warp-cli connect
warp-cli disconnect
sudo warp-svc
warp-cli connect
warp-cli disconnect
sudo warp-svc
python3 -v
python3 --version
clear
pipenv install
clear
pipenv run uvicorn main:app --reload
warp-cli connect
warp-cli connect
warp-cli disconnect
warp-cli connect
warp-cli connect
warp-cli connect
warp-cli connect
warp-cli connect
warp-cli disconnect
sudo warp-svc
sudo warp-svc
sudo warp-svc
warp-cli connect
warp-cli connect
warp-cli disconnect
sudo warp-svc
warp-cli connect
./postgrest
sudo mv postgrest /usr/local/bin
clear
sudo apt udpate
bossman
sudo apt udpate
sudo apt update
sudo apt update
sudo apt update
sudo apt update
sudo apt upgrade
sudo apt upgrade
sudo apt update
sudo apt upgrade
sudo docker run --name tutorial -p 5433:5432 \\
                -e POSTGRES_PASSWORD=mysecretpassword \\
                -d postgres
sudo docker run --name tutorial -p 5433:5432 \\
                -e POSTGRES_PASSWORD=mysecretpassword \\
                -d postgres
sudo docker run --name tutorial -p 5433:5432 \\
                -e POSTGRES_PASSWORD=mysecretpassword \\
                -d postgres
sudo apt-get install libpq-dev
# Allow "tr" to process non-utf8 byte sequences\
export LC_CTYPE=C\
\
# read random bytes and keep only alphanumerics\
< /dev/urandom tr -dc A-Za-z0-9 | head -c32
cd Documents
clear
cd ../Downloads
ls
cd ..
ls
vi tut,conf
mv tut,conf tut.conf
clear
cat tut.conf
clear
export TOKEN="eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJyb2xlIjoidG9kb191c2VyIn0.Xh0iEYZWRIoEB0V-Iot6MTaawBBHBrajS_gsZ1VxVEQ"
curl http://localhost:3000/todos -X POST \\
     -H "Authorization: Bearer $TOKEN"   \\
     -H "Content-Type: application/json" \\
     -d '{"task": "learn how to auth"}'
curl http://localhost:3000/todos -X PATCH \\
     -H "Authorization: Bearer $TOKEN"    \\
     -H "Content-Type: application/json"  \\
     -d '{"done": true}'
sudo docker ps
postgrest
sudo docker exec -it tutorial psql -U postgres
vi tut,conf
postgrest tut,conf
postgrest tut.conf
sudo docker exec -it tutorial psql -U postgres
curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.1/install.sh | bash
cat .config/zsh/.zshrc
vi .config/zsh/.zshrc
vi .config/zsh/.zshrc
nvm -v
nvm install 16.
git status
clear
yarn install
npm -v
clear
npm -v
npm install -g yarn
npm install -g yarn
yarn --v
cd Development/web-dev/react/exoworlds-frontend
clear
git status
git log
clear
git remote add origin https://github.com/ExoworldsNFT/exoworlds-website.git
git remote add github https://github.com/ExoworldsNFT/exoworlds-website.git
git push github master
nvim -v
sudo apt install neovim
nvim -v
lua
warp-cli connect
warp-cli disconnect
sudo warp-svx
sudo warp-svc
warp-cli connect
warp-cli connect
warp-cli disconnect
sudo docker run --name tutorial -p 5433:5432 \\
                -e POSTGRES_PASSWORD=mysecretpassword \\
                -d postgres
sudo docker exec -it tutorial psql -U postgres
ls
vi tut.conf
postgrest tut.conf
clear
vi tut.conf
vi tut.conf
postgrest tut.conf
vi tut.conf
vi tut.conf
postgrest tut.conf
sudo db
clear
sudo docker -l
sudo docker ps -a
sudo docker ps
warp-cli disconnect
warp-cli connect
warp-cli connect
warp-cli connect
warp-cli connect
warp-cli disconnect
warp-cli connect
warp-cli connect
warp-cli connect
export TOKEN="eyJhbGciOiJSUzI1NiIsInR5cCIgOiAiSldUIiwia2lkIiA6ICJuY2g1N1RFeDVMeEJVRDBlWmZIc3dZVHpoSjN6YUY1QXJMUGQyVDQwSFhzIn0.eyJleHAiOjE2NDE2NTE5MTIsImlhdCI6MTY0MTY1MTYxMiwiYXV0aF90aW1lIjoxNjQxNjUxNTgwLCJqdGkiOiJkN2IzYWFiOS1iNDc0LTQxOGEtODZhZi1lMGUxM2RjMDFlNzUiLCJpc3MiOiJodHRwczovL2FwcC5wbGVhc2Utb3Blbi5pdC9hdXRoL3JlYWxtcy9iNGEzMzA5NC1mZTBhLTRkNGEtOTg0Ny1mNzU5MzQ2M2U2MWIiLCJhdWQiOiJhY2NvdW50Iiwic3ViIjoiZTg2MTQ2YTEtNTczMi00YWViLWJkYWYtMWU4NTAwZjEzZDMyIiwidHlwIjoiQmVhcmVyIiwiYXpwIjoiZnJvbnRlbmQiLCJub25jZSI6ImQ4NTliMTE4LTE0OGMtNGVkOS04MDM4LTMyODViN2M3NTUzNiIsInNlc3Npb25fc3RhdGUiOiJiYzAwNDgzOS1lMWQyLTQyNTEtOTdlYy0xODM0Y2E2NTQyOTciLCJhY3IiOiIwIiwicmVhbG1fYWNjZXNzIjp7InJvbGVzIjpbIm9mZmxpbmVfYWNjZXNzIiwidW1hX2F1dGhvcml6YXRpb24iLCJkZWZhdWx0LXJvbGVzLWI0YTMzMDk0LWZlMGEtNGQ0YS05ODQ3LWY3NTkzNDYzZTYxYiJdfSwicmVzb3VyY2VfYWNjZXNzIjp7ImFjY291bnQiOnsicm9sZXMiOlsibWFuYWdlLWFjY291bnQiLCJtYW5hZ2UtYWNjb3VudC1saW5rcyIsInZpZXctcHJvZmlsZSJdfSwiZnJvbnRlbmQiOnsicm9sZXMiOlsic3RhbmRhcmQiXX19LCJzY29wZSI6Im9wZW5pZCBlbWFpbCBwcm9maWxlIiwic2lkIjoiYmMwMDQ4MzktZTFkMi00MjUxLTk3ZWMtMTgzNGNhNjU0Mjk3IiwiZW1haWxfdmVyaWZpZWQiOmZhbHNlLCJwcmVmZXJyZWRfdXNlcm5hbWUiOiJ1c2VyLTIifQ.gZd-84HJOVV2D40om_KFOySs67AHzvpfknqaf4wZ3bEHCFWoLjxeAQWjITBkp3XkPp9AmXlQ46L3Kfq7Ug_esrU-fLlrb7dl8vEHST5u75ukMxzn0aWIsvh8HItpTTISXDQjWmscM0SyB1neHq835b_FoIq2p9w4hAqpGn5EotqvT3KQgNxAg1lmOaexngPzt8ekykVZ9iQFWPC72dTXBMg310-PfhgkKLl6bPHMXonc8I4yM3gc2sWFrppVJ1QdIN7HHVjCIz-7VC7Uok-96BLHBv0byiRDADFITm_Jd17004O9Lf2dTUPWhK4lGQ0LW0r3CL7ZYzmsgpRlJ7CtHw"
clear
curl http://localhost:3000/todos -X PATCH \\
     -H "Authorization: Bearer $TOKEN"    \\
     -H "Content-Type: application/json"  \\
     -d '{"done": true}'
curl http://localhost:3000/users_example -X POST \\
     -H "Authorization: Bearer $TOKEN"    \\
     -H "Content-Type: application/json"  \\
     -d '{"message_body": "learn how to auth"}'
CREATE TABLE api.user (\
  id              NAME      PRIMARY KEY DEFAULT current_setting('request.jwt.claim.sub', true),\
  email           NAME      NOT NULL DEFAULT current_setting('request.jwt.claim.email', true),\
  username        NAME      NOT NULL DEFAULT current_setting('request.jwt.claim.prefered_username', true)\
);\
\
CREATE TABLE api.channel (\
  id              SERIAL           PRIMARY KEY,\
  title           VARCHAR(50)      NOT NULL,\
  description     TEXT             \
);\
\
CREATE TABLE api.message (\
  id              SERIAL       PRIMARY KEY,\
  channel_id      INTEGER      REFERENCES   api.channel(id),\
  user_id         NAME         NOT NULL DEFAULT current_setting('request.jwt.claim.sub', true),\
  message_time    TIMESTAMP    NOT NULL DEFAULT now(),\
  body            TEXT             \
);\
\
CREATE TABLE api.subscription (\
  id              SERIAL       PRIMARY KEY,\
  channel_id      INTEGER,\
  FOREIGN KEY (channel_id) REFERENCES api.channel(id),\
  user_id         NAME         REFERENCES   api.user,\
  subscriber      NAME         NOT NULL DEFAULT current_setting('request.jwt.claim.sub', true)\
);\

CREATE TABLE api.user (\
  id              NAME      PRIMARY KEY DEFAULT current_setting('request.jwt.claim.sub', true),\
  email           NAME      NOT NULL DEFAULT current_setting('request.jwt.claim.email', true),\
  username        NAME      NOT NULL DEFAULT current_setting('request.jwt.claim.prefered_username', true)\
);\
\
CREATE TABLE api.channel (\
  id              SERIAL           PRIMARY KEY,\
  title           VARCHAR(50)      NOT NULL,\
  description     TEXT             \
);\
\
CREATE TABLE api.message (\
  id              SERIAL       PRIMARY KEY,\
  channel_id      INTEGER      REFERENCES   api.channel(id),\
  user_id         NAME         NOT NULL DEFAULT current_setting('request.jwt.claim.sub', true),\
  message_time    TIMESTAMP    NOT NULL DEFAULT now(),\
  body            TEXT             \
);\
\
CREATE TABLE api.subscription (\
  id              SERIAL       PRIMARY KEY,\
  channel_id      INTEGER,\
  FOREIGN KEY (channel_id) REFERENCES api.channel(id),\
  user_id         NAME         REFERENCES   api.user,\
  subscriber      NAME         NOT NULL DEFAULT current_setting('request.jwt.claim.sub', true)\
);\

sudo warp-svc
docker exec -it postgrest_db_1 psql -U postgres
sudo docker ps
docker exec -it chatty_db_1 psql -U postgres
sudo docker exec -it chatty_db_1 psql -U postgres
cd Development/node/koa/chatty
vi docker-compose.yml
vi docker-compose.yml
docker-compose up
sudo docker-compose up
docker run -p 8080:8080 -e KEYCLOAK_USER=admin -e KEYCLOAK_PASSWORD=admin quay.io/keycloak/keycloak:16.1.0
sudo docker run -p 8080:8080 -e KEYCLOAK_USER=admin -e KEYCLOAK_PASSWORD=admin quay.io/keycloak/keycloak:16.1.0
sudo docker run -p 8080:8080 -e KEYCLOAK_USER=admin -e KEYCLOAK_PASSWORD=admin quay.io/keycloak/keycloak:16.1.0
sudo docker run -p 8080:8080 -e KEYCLOAK_USER=admin -e KEYCLOAK_PASSWORD=admin quay.io/keycloak/keycloak:16.1.0
sudo docker run -p 8080:8080 -e KEYCLOAK_USER=admin -e KEYCLOAK_PASSWORD=admin quay.io/keycloak/keycloak
clear
sudo docker ps -a
sudo docker stop V
sudo docker ps -a
sudo docker stop ffc594cf2c64
sudo docker ps
sudo docker rm ffc594cf2c64 c3ff92c181b3 1d73ce1aa234 006c36ccad05 
sudo docker ps
sudo docker ps -a
sudo docker stop e349512fd8b0
clear
docker run -e KEYCLOAK_USER=<USERNAME> -e KEYCLOAK_PASSWORD=<PASSWORD> jboss/keycloak
sudo docker run -e KEYCLOAK_USER=admin -e KEYCLOAK_PASSWORD=admin jboss/keycloak
sudo docker ps -a
sudo docker rm e349512fd8b0 0dc283e4e2d9
clear
sudo docker -a
sudo docker ps -a
clear
sudo docker run -p 8080:8080 -e KEYCLOAK_USER=admin -e KEYCLOAK_PASSWORD=admin jboss/keycloak
cd Development/node/koa/chatty
vi docker-compose.yml
export TOKEN=\
eyJhbGciOiJSUzI1NiIsInR5cCIgOiAiSldUIiwia2lkIiA6ICJuY2g1N1RFeDVMeEJVRDBlWmZIc3dZVHpoSjN6YUY1QXJMUGQyVDQwSFhzIn0.eyJleHAiOjE2NDE4MzMzNjMsImlhdCI6MTY0MTgzMzA2MywiYXV0aF90aW1lIjoxNjQxODMzMDYxLCJqdGkiOiJkZTZjZDY1MS1lZjY2LTRkYzktYmFlNS05Y2U2MjZkODVmOTgiLCJpc3MiOiJodHRwczovL2FwcC5wbGVhc2Utb3Blbi5pdC9hdXRoL3JlYWxtcy9iNGEzMzA5NC1mZTBhLTRkNGEtOTg0Ny1mNzU5MzQ2M2U2MWIiLCJhdWQiOiJhY2NvdW50Iiwic3ViIjoiZjExODNmMzEtYzBkZS00MTM1LWFhNGItZmFlODNjYjg1NDM1IiwidHlwIjoiQmVhcmVyIiwiYXpwIjoiZnJvbnRlbmQiLCJub25jZSI6IjIyYWY2NTQ5LWExZjgtNGU3ZC1hN2U3LWJkYTdhODE2MjlkYiIsInNlc3Npb25fc3RhdGUiOiI1OWQ5YWI0ZS05N2RmLTRmY2MtOTE1MC0yNzcwZTYzMmNjMmIiLCJhY3IiOiIxIiwiYWxsb3dlZC1vcmlnaW5zIjpbImh0dHBzOi8vcGxheWdyb3VuZC5wbGVhc2Utb3Blbi5pdCJdLCJyZWFsbV9hY2Nlc3MiOnsicm9sZXMiOlsib2ZmbGluZV9hY2Nlc3MiLCJ1bWFfYXV0aG9yaXphdGlvbiIsImRlZmF1bHQtcm9sZXMtYjRhMzMwOTQtZmUwYS00ZDRhLTk4NDctZjc1OTM0NjNlNjFiIl19LCJyZXNvdXJjZV9hY2Nlc3MiOnsiYWNjb3VudCI6eyJyb2xlcyI6WyJtYW5hZ2UtYWNjb3VudCIsIm1hbmFnZS1hY2NvdW50LWxpbmtzIiwidmlldy1wcm9maWxlIl19LCJmcm9udGVuZCI6eyJyb2xlcyI6WyJ0b2RvX3VzZXIiXX19LCJzY29wZSI6Im9wZW5pZCBlbWFpbCBwcm9maWxlIiwic2lkIjoiNTlkOWFiNGUtOTdkZi00ZmNjLTkxNTAtMjc3MGU2MzJjYzJiIiwiZW1haWxfdmVyaWZpZWQiOmZhbHNlLCJwcmVmZXJyZWRfdXNlcm5hbWUiOiJ1c2VyLTEifQ.OdGWxa9-r9lEZds0R1IcodVwEYehcDM_kI9wUGH_hx65nNGc3N_TXbd1NVoZ6QmP9IF9bPFHpOBowlmhC5iWnzAZrgfCKNmlK7WovamTuioQsAfQCgCB3EKv01qPC2OWyzgn-c4w6ac4V-H3sgyD2ctIBVNfICiTP2PTuH0NF3X9oOAF3oXOOL50QKgXKSbfV1bo6VVrZbjPWWL_I_rvDzRwsv38S-OWRxBbXvL2Mq92DBllQIpETbdM1TuaK7u1Y2PfJWkpb6JXfNmlrP1hR3pC6ipaOQBQt2GiZTAS8kqJ0zvuVe5dOhNLpAJXUh9WV1rwIb3lVf_ZhAmeoo96KQ\

clear
$TOKEN
export TOKEN="\
eyJhbGciOiJSUzI1NiIsInR5cCIgOiAiSldUIiwia2lkIiA6ICJuY2g1N1RFeDVMeEJVRDBlWmZIc3dZVHpoSjN6YUY1QXJMUGQyVDQwSFhzIn0.eyJleHAiOjE2NDE4MzMzNjMsImlhdCI6MTY0MTgzMzA2MywiYXV0aF90aW1lIjoxNjQxODMzMDYxLCJqdGkiOiJkZTZjZDY1MS1lZjY2LTRkYzktYmFlNS05Y2U2MjZkODVmOTgiLCJpc3MiOiJodHRwczovL2FwcC5wbGVhc2Utb3Blbi5pdC9hdXRoL3JlYWxtcy9iNGEzMzA5NC1mZTBhLTRkNGEtOTg0Ny1mNzU5MzQ2M2U2MWIiLCJhdWQiOiJhY2NvdW50Iiwic3ViIjoiZjExODNmMzEtYzBkZS00MTM1LWFhNGItZmFlODNjYjg1NDM1IiwidHlwIjoiQmVhcmVyIiwiYXpwIjoiZnJvbnRlbmQiLCJub25jZSI6IjIyYWY2NTQ5LWExZjgtNGU3ZC1hN2U3LWJkYTdhODE2MjlkYiIsInNlc3Npb25fc3RhdGUiOiI1OWQ5YWI0ZS05N2RmLTRmY2MtOTE1MC0yNzcwZTYzMmNjMmIiLCJhY3IiOiIxIiwiYWxsb3dlZC1vcmlnaW5zIjpbImh0dHBzOi8vcGxheWdyb3VuZC5wbGVhc2Utb3Blbi5pdCJdLCJyZWFsbV9hY2Nlc3MiOnsicm9sZXMiOlsib2ZmbGluZV9hY2Nlc3MiLCJ1bWFfYXV0aG9yaXphdGlvbiIsImRlZmF1bHQtcm9sZXMtYjRhMzMwOTQtZmUwYS00ZDRhLTk4NDctZjc1OTM0NjNlNjFiIl19LCJyZXNvdXJjZV9hY2Nlc3MiOnsiYWNjb3VudCI6eyJyb2xlcyI6WyJtYW5hZ2UtYWNjb3VudCIsIm1hbmFnZS1hY2NvdW50LWxpbmtzIiwidmlldy1wcm9maWxlIl19LCJmcm9udGVuZCI6eyJyb2xlcyI6WyJ0b2RvX3VzZXIiXX19LCJzY29wZSI6Im9wZW5pZCBlbWFpbCBwcm9maWxlIiwic2lkIjoiNTlkOWFiNGUtOTdkZi00ZmNjLTkxNTAtMjc3MGU2MzJjYzJiIiwiZW1haWxfdmVyaWZpZWQiOmZhbHNlLCJwcmVmZXJyZWRfdXNlcm5hbWUiOiJ1c2VyLTEifQ.OdGWxa9-r9lEZds0R1IcodVwEYehcDM_kI9wUGH_hx65nNGc3N_TXbd1NVoZ6QmP9IF9bPFHpOBowlmhC5iWnzAZrgfCKNmlK7WovamTuioQsAfQCgCB3EKv01qPC2OWyzgn-c4w6ac4V-H3sgyD2ctIBVNfICiTP2PTuH0NF3X9oOAF3oXOOL50QKgXKSbfV1bo6VVrZbjPWWL_I_rvDzRwsv38S-OWRxBbXvL2Mq92DBllQIpETbdM1TuaK7u1Y2PfJWkpb6JXfNmlrP1hR3pC6ipaOQBQt2GiZTAS8kqJ0zvuVe5dOhNLpAJXUh9WV1rwIb3lVf_ZhAmeoo96KQ\
\
"
clear
export TOKEN="\
eyJhbGciOiJSUzI1NiIsInR5cCIgOiAiSldUIiwia2lkIiA6ICJuY2g1N1RFeDVMeEJVRDBlWmZIc3dZVHpoSjN6YUY1QXJMUGQyVDQwSFhzIn0.eyJleHAiOjE2NDE4MzMzNjMsImlhdCI6MTY0MTgzMzA2MywiYXV0aF90aW1lIjoxNjQxODMzMDYxLCJqdGkiOiJkZTZjZDY1MS1lZjY2LTRkYzktYmFlNS05Y2U2MjZkODVmOTgiLCJpc3MiOiJodHRwczovL2FwcC5wbGVhc2Utb3Blbi5pdC9hdXRoL3JlYWxtcy9iNGEzMzA5NC1mZTBhLTRkNGEtOTg0Ny1mNzU5MzQ2M2U2MWIiLCJhdWQiOiJhY2NvdW50Iiwic3ViIjoiZjExODNmMzEtYzBkZS00MTM1LWFhNGItZmFlODNjYjg1NDM1IiwidHlwIjoiQmVhcmVyIiwiYXpwIjoiZnJvbnRlbmQiLCJub25jZSI6IjIyYWY2NTQ5LWExZjgtNGU3ZC1hN2U3LWJkYTdhODE2MjlkYiIsInNlc3Npb25fc3RhdGUiOiI1OWQ5YWI0ZS05N2RmLTRmY2MtOTE1MC0yNzcwZTYzMmNjMmIiLCJhY3IiOiIxIiwiYWxsb3dlZC1vcmlnaW5zIjpbImh0dHBzOi8vcGxheWdyb3VuZC5wbGVhc2Utb3Blbi5pdCJdLCJyZWFsbV9hY2Nlc3MiOnsicm9sZXMiOlsib2ZmbGluZV9hY2Nlc3MiLCJ1bWFfYXV0aG9yaXphdGlvbiIsImRlZmF1bHQtcm9sZXMtYjRhMzMwOTQtZmUwYS00ZDRhLTk4NDctZjc1OTM0NjNlNjFiIl19LCJyZXNvdXJjZV9hY2Nlc3MiOnsiYWNjb3VudCI6eyJyb2xlcyI6WyJtYW5hZ2UtYWNjb3VudCIsIm1hbmFnZS1hY2NvdW50LWxpbmtzIiwidmlldy1wcm9maWxlIl19LCJmcm9udGVuZCI6eyJyb2xlcyI6WyJ0b2RvX3VzZXIiXX19LCJzY29wZSI6Im9wZW5pZCBlbWFpbCBwcm9maWxlIiwic2lkIjoiNTlkOWFiNGUtOTdkZi00ZmNjLTkxNTAtMjc3MGU2MzJjYzJiIiwiZW1haWxfdmVyaWZpZWQiOmZhbHNlLCJwcmVmZXJyZWRfdXNlcm5hbWUiOiJ1c2VyLTEifQ.OdGWxa9-r9lEZds0R1IcodVwEYehcDM_kI9wUGH_hx65nNGc3N_TXbd1NVoZ6QmP9IF9bPFHpOBowlmhC5iWnzAZrgfCKNmlK7WovamTuioQsAfQCgCB3EKv01qPC2OWyzgn-c4w6ac4V-H3sgyD2ctIBVNfICiTP2PTuH0NF3X9oOAF3oXOOL50QKgXKSbfV1bo6VVrZbjPWWL_I_rvDzRwsv38S-OWRxBbXvL2Mq92DBllQIpETbdM1TuaK7u1Y2PfJWkpb6JXfNmlrP1hR3pC6ipaOQBQt2GiZTAS8kqJ0zvuVe5dOhNLpAJXUh9WV1rwIb3lVf_ZhAmeoo96KQ\
"
$TOKEN
clear
export TOKEN="\
eyJhbGciOiJSUzI1NiIsInR5cCIgOiAiSldUIiwia2lkIiA6ICJuY2g1N1RFeDVMeEJVRDBlWmZIc3dZVHpoSjN6YUY1QXJMUGQyVDQwSFhzIn0.eyJleHAiOjE2NDE4MzMzNjMsImlhdCI6MTY0MTgzMzA2MywiYXV0aF90aW1lIjoxNjQxODMzMDYxLCJqdGkiOiJkZTZjZDY1MS1lZjY2LTRkYzktYmFlNS05Y2U2MjZkODVmOTgiLCJpc3MiOiJodHRwczovL2FwcC5wbGVhc2Utb3Blbi5pdC9hdXRoL3JlYWxtcy9iNGEzMzA5NC1mZTBhLTRkNGEtOTg0Ny1mNzU5MzQ2M2U2MWIiLCJhdWQiOiJhY2NvdW50Iiwic3ViIjoiZjExODNmMzEtYzBkZS00MTM1LWFhNGItZmFlODNjYjg1NDM1IiwidHlwIjoiQmVhcmVyIiwiYXpwIjoiZnJvbnRlbmQiLCJub25jZSI6IjIyYWY2NTQ5LWExZjgtNGU3ZC1hN2U3LWJkYTdhODE2MjlkYiIsInNlc3Npb25fc3RhdGUiOiI1OWQ5YWI0ZS05N2RmLTRmY2MtOTE1MC0yNzcwZTYzMmNjMmIiLCJhY3IiOiIxIiwiYWxsb3dlZC1vcmlnaW5zIjpbImh0dHBzOi8vcGxheWdyb3VuZC5wbGVhc2Utb3Blbi5pdCJdLCJyZWFsbV9hY2Nlc3MiOnsicm9sZXMiOlsib2ZmbGluZV9hY2Nlc3MiLCJ1bWFfYXV0aG9yaXphdGlvbiIsImRlZmF1bHQtcm9sZXMtYjRhMzMwOTQtZmUwYS00ZDRhLTk4NDctZjc1OTM0NjNlNjFiIl19LCJyZXNvdXJjZV9hY2Nlc3MiOnsiYWNjb3VudCI6eyJyb2xlcyI6WyJtYW5hZ2UtYWNjb3VudCIsIm1hbmFnZS1hY2NvdW50LWxpbmtzIiwidmlldy1wcm9maWxlIl19LCJmcm9udGVuZCI6eyJyb2xlcyI6WyJ0b2RvX3VzZXIiXX19LCJzY29wZSI6Im9wZW5pZCBlbWFpbCBwcm9maWxlIiwic2lkIjoiNTlkOWFiNGUtOTdkZi00ZmNjLTkxNTAtMjc3MGU2MzJjYzJiIiwiZW1haWxfdmVyaWZpZWQiOmZhbHNlLCJwcmVmZXJyZWRfdXNlcm5hbWUiOiJ1c2VyLTEifQ.OdGWxa9-r9lEZds0R1IcodVwEYehcDM_kI9wUGH_hx65nNGc3N_TXbd1NVoZ6QmP9IF9bPFHpOBowlmhC5iWnzAZrgfCKNmlK7WovamTuioQsAfQCgCB3EKv01qPC2OWyzgn-c4w6ac4V-H3sgyD2ctIBVNfICiTP2PTuH0NF3X9oOAF3oXOOL50QKgXKSbfV1bo6VVrZbjPWWL_I_rvDzRwsv38S-OWRxBbXvL2Mq92DBllQIpETbdM1TuaK7u1Y2PfJWkpb6JXfNmlrP1hR3pC6ipaOQBQt2GiZTAS8kqJ0zvuVe5dOhNLpAJXUh9WV1rwIb3lVf_ZhAmeoo96KQ"\

$TOKEN
clear
\
curl http://localhost:3000/todos -X POST \\
     -H "Authorization: Bearer $TOKEN"   \\
     -H "Content-Type: application/json" \\
     -d '{"task": "learn how to auth"}'
vi docker-compose.yml
export TOKEN="<paste token here>"\
\
curl http://localhost:3000/todos -X POST \\
     -H "Authorization: Bearer $TOKEN"   \\
     -H "Content-Type: application/json" \\
     -d '{"task": "learn how to auth"}'
$TOKEN
export TOKEN="\
eyJhbGciOiJSUzI1NiIsInR5cCIgOiAiSldUIiwia2lkIiA6ICJuY2g1N1RFeDVMeEJVRDBlWmZIc3dZVHpoSjN6YUY1QXJMUGQyVDQwSFhzIn0.eyJleHAiOjE2NDE4MzQ2MjgsImlhdCI6MTY0MTgzNDMyOCwiYXV0aF90aW1lIjoxNjQxODMzODM5LCJqdGkiOiI1YmMwMmYwYS04YTRjLTRkMWMtOWFkZi00MTUzNWFhNDFjOTMiLCJpc3MiOiJodHRwczovL2FwcC5wbGVhc2Utb3Blbi5pdC9hdXRoL3JlYWxtcy9iNGEzMzA5NC1mZTBhLTRkNGEtOTg0Ny1mNzU5MzQ2M2U2MWIiLCJhdWQiOiJhY2NvdW50Iiwic3ViIjoiZjExODNmMzEtYzBkZS00MTM1LWFhNGItZmFlODNjYjg1NDM1IiwidHlwIjoiQmVhcmVyIiwiYXpwIjoiZnJvbnRlbmQiLCJub25jZSI6ImIwYjE5MDRiLWQwMWQtNDczOS04MTE5LTljMjBlODJjMDE1NCIsInNlc3Npb25fc3RhdGUiOiIyOTFkOWM3Yy00Yjc2LTQ4ZDUtYWI5YS1lZDUwMzY4MzIxZTciLCJhY3IiOiIwIiwiYWxsb3dlZC1vcmlnaW5zIjpbImh0dHBzOi8vcGxheWdyb3VuZC5wbGVhc2Utb3Blbi5pdCJdLCJyZWFsbV9hY2Nlc3MiOnsicm9sZXMiOlsib2ZmbGluZV9hY2Nlc3MiLCJ1bWFfYXV0aG9yaXphdGlvbiIsImRlZmF1bHQtcm9sZXMtYjRhMzMwOTQtZmUwYS00ZDRhLTk4NDctZjc1OTM0NjNlNjFiIl19LCJyZXNvdXJjZV9hY2Nlc3MiOnsiYWNjb3VudCI6eyJyb2xlcyI6WyJtYW5hZ2UtYWNjb3VudCIsIm1hbmFnZS1hY2NvdW50LWxpbmtzIiwidmlldy1wcm9maWxlIl19LCJmcm9udGVuZCI6eyJyb2xlcyI6WyJ0b2RvX3VzZXIiXX19LCJzY29wZSI6Im9wZW5pZCBlbWFpbCBwcm9maWxlIiwic2lkIjoiMjkxZDljN2MtNGI3Ni00OGQ1LWFiOWEtZWQ1MDM2ODMyMWU3IiwiZW1haWxfdmVyaWZpZWQiOmZhbHNlLCJwcmVmZXJyZWRfdXNlcm5hbWUiOiJ1c2VyLTEifQ.BVhODHVV034urSARh7vx51MlGnsoOn_Jzp0E_TzvifezjFadm50KiZiBA0u1eXNJKWRspAsUbrp2JB8rwG3q3tjeJRGjeSMqjpGy6CcePIgc7TY3g2GGUWKclZaI-VBGyUHTzjpRzdGmlpjdbBLhGVKOhcGHl7VdSt45BAo1lscmtEUrrgcnCNxKkjtEK1E2VBYdA_HemjCyAXWmHSBnIqik7h4xl3SBLs_CDGuhRvSxUN7h0bB3tHtZTgabvyzFUWFeI5HN26ach7TQaCjlzLD9vI2-xQRqYHkTl4MvocsbWhU3nECBDp_he3Ph6Bxc81f-vcxyPN4HG0RpUawYgw"\

export TOKEN="<paste token here>"\
\
curl http://localhost:3000/todos -X POST \\
     -H "Authorization: Bearer $TOKEN"   \\
     -H "Content-Type: application/json" \\
     -d '{"task": "learn how to auth"}'
$TOKEN
echo $TOKEN
export TOKEN="\
eyJhbGciOiJSUzI1NiIsInR5cCIgOiAiSldUIiwia2lkIiA6ICJuY2g1N1RFeDVMeEJVRDBlWmZIc3dZVHpoSjN6YUY1QXJMUGQyVDQwSFhzIn0.eyJleHAiOjE2NDE4MzQ2MjgsImlhdCI6MTY0MTgzNDMyOCwiYXV0aF90aW1lIjoxNjQxODMzODM5LCJqdGkiOiI1YmMwMmYwYS04YTRjLTRkMWMtOWFkZi00MTUzNWFhNDFjOTMiLCJpc3MiOiJodHRwczovL2FwcC5wbGVhc2Utb3Blbi5pdC9hdXRoL3JlYWxtcy9iNGEzMzA5NC1mZTBhLTRkNGEtOTg0Ny1mNzU5MzQ2M2U2MWIiLCJhdWQiOiJhY2NvdW50Iiwic3ViIjoiZjExODNmMzEtYzBkZS00MTM1LWFhNGItZmFlODNjYjg1NDM1IiwidHlwIjoiQmVhcmVyIiwiYXpwIjoiZnJvbnRlbmQiLCJub25jZSI6ImIwYjE5MDRiLWQwMWQtNDczOS04MTE5LTljMjBlODJjMDE1NCIsInNlc3Npb25fc3RhdGUiOiIyOTFkOWM3Yy00Yjc2LTQ4ZDUtYWI5YS1lZDUwMzY4MzIxZTciLCJhY3IiOiIwIiwiYWxsb3dlZC1vcmlnaW5zIjpbImh0dHBzOi8vcGxheWdyb3VuZC5wbGVhc2Utb3Blbi5pdCJdLCJyZWFsbV9hY2Nlc3MiOnsicm9sZXMiOlsib2ZmbGluZV9hY2Nlc3MiLCJ1bWFfYXV0aG9yaXphdGlvbiIsImRlZmF1bHQtcm9sZXMtYjRhMzMwOTQtZmUwYS00ZDRhLTk4NDctZjc1OTM0NjNlNjFiIl19LCJyZXNvdXJjZV9hY2Nlc3MiOnsiYWNjb3VudCI6eyJyb2xlcyI6WyJtYW5hZ2UtYWNjb3VudCIsIm1hbmFnZS1hY2NvdW50LWxpbmtzIiwidmlldy1wcm9maWxlIl19LCJmcm9udGVuZCI6eyJyb2xlcyI6WyJ0b2RvX3VzZXIiXX19LCJzY29wZSI6Im9wZW5pZCBlbWFpbCBwcm9maWxlIiwic2lkIjoiMjkxZDljN2MtNGI3Ni00OGQ1LWFiOWEtZWQ1MDM2ODMyMWU3IiwiZW1haWxfdmVyaWZpZWQiOmZhbHNlLCJwcmVmZXJyZWRfdXNlcm5hbWUiOiJ1c2VyLTEifQ.BVhODHVV034urSARh7vx51MlGnsoOn_Jzp0E_TzvifezjFadm50KiZiBA0u1eXNJKWRspAsUbrp2JB8rwG3q3tjeJRGjeSMqjpGy6CcePIgc7TY3g2GGUWKclZaI-VBGyUHTzjpRzdGmlpjdbBLhGVKOhcGHl7VdSt45BAo1lscmtEUrrgcnCNxKkjtEK1E2VBYdA_HemjCyAXWmHSBnIqik7h4xl3SBLs_CDGuhRvSxUN7h0bB3tHtZTgabvyzFUWFeI5HN26ach7TQaCjlzLD9vI2-xQRqYHkTl4MvocsbWhU3nECBDp_he3Ph6Bxc81f-vcxyPN4HG0RpUawYgw"\

export TOKEN="\
eyJhbGciOiJSUzI1NiIsInR5cCIgOiAiSldUIiwia2lkIiA6ICJuY2g1N1RFeDVMeEJVRDBlWmZIc3dZVHpoSjN6YUY1QXJMUGQyVDQwSFhzIn0.eyJleHAiOjE2NDE4MzQ2MjgsImlhdCI6MTY0MTgzNDMyOCwiYXV0aF90aW1lIjoxNjQxODMzODM5LCJqdGkiOiI1YmMwMmYwYS04YTRjLTRkMWMtOWFkZi00MTUzNWFhNDFjOTMiLCJpc3MiOiJodHRwczovL2FwcC5wbGVhc2Utb3Blbi5pdC9hdXRoL3JlYWxtcy9iNGEzMzA5NC1mZTBhLTRkNGEtOTg0Ny1mNzU5MzQ2M2U2MWIiLCJhdWQiOiJhY2NvdW50Iiwic3ViIjoiZjExODNmMzEtYzBkZS00MTM1LWFhNGItZmFlODNjYjg1NDM1IiwidHlwIjoiQmVhcmVyIiwiYXpwIjoiZnJvbnRlbmQiLCJub25jZSI6ImIwYjE5MDRiLWQwMWQtNDczOS04MTE5LTljMjBlODJjMDE1NCIsInNlc3Npb25fc3RhdGUiOiIyOTFkOWM3Yy00Yjc2LTQ4ZDUtYWI5YS1lZDUwMzY4MzIxZTciLCJhY3IiOiIwIiwiYWxsb3dlZC1vcmlnaW5zIjpbImh0dHBzOi8vcGxheWdyb3VuZC5wbGVhc2Utb3Blbi5pdCJdLCJyZWFsbV9hY2Nlc3MiOnsicm9sZXMiOlsib2ZmbGluZV9hY2Nlc3MiLCJ1bWFfYXV0aG9yaXphdGlvbiIsImRlZmF1bHQtcm9sZXMtYjRhMzMwOTQtZmUwYS00ZDRhLTk4NDctZjc1OTM0NjNlNjFiIl19LCJyZXNvdXJjZV9hY2Nlc3MiOnsiYWNjb3VudCI6eyJyb2xlcyI6WyJtYW5hZ2UtYWNjb3VudCIsIm1hbmFnZS1hY2NvdW50LWxpbmtzIiwidmlldy1wcm9maWxlIl19LCJmcm9udGVuZCI6eyJyb2xlcyI6WyJ0b2RvX3VzZXIiXX19LCJzY29wZSI6Im9wZW5pZCBlbWFpbCBwcm9maWxlIiwic2lkIjoiMjkxZDljN2MtNGI3Ni00OGQ1LWFiOWEtZWQ1MDM2ODMyMWU3IiwiZW1haWxfdmVyaWZpZWQiOmZhbHNlLCJwcmVmZXJyZWRfdXNlcm5hbWUiOiJ1c2VyLTEifQ.BVhODHVV034urSARh7vx51MlGnsoOn_Jzp0E_TzvifezjFadm50KiZiBA0u1eXNJKWRspAsUbrp2JB8rwG3q3tjeJRGjeSMqjpGy6CcePIgc7TY3g2GGUWKclZaI-VBGyUHTzjpRzdGmlpjdbBLhGVKOhcGHl7VdSt45BAo1lscmtEUrrgcnCNxKkjtEK1E2VBYdA_HemjCyAXWmHSBnIqik7h4xl3SBLs_CDGuhRvSxUN7h0bB3tHtZTgabvyzFUWFeI5HN26ach7TQaCjlzLD9vI2-xQRqYHkTl4MvocsbWhU3nECBDp_he3Ph6Bxc81f-vcxyPN4HG0RpUawYgw\
\
\
\
\
\
\
"
clear
export TOKEN="eyJhbGciOiJSUzI1NiIsInR5cCIgOiAiSldUIiwia2lkIiA6ICJuY2g1N1RFeDVMeEJVRDBlWmZIc3dZVHpoSjN6YUY1QXJMUGQyVDQwSFhzIn0.eyJleHAiOjE2NDE4MzQ2MjgsImlhdCI6MTY0MTgzNDMyOCwiYXV0aF90aW1lIjoxNjQxODMzODM5LCJqdGkiOiI1YmMwMmYwYS04YTRjLTRkMWMtOWFkZi00MTUzNWFhNDFjOTMiLCJpc3MiOiJodHRwczovL2FwcC5wbGVhc2Utb3Blbi5pdC9hdXRoL3JlYWxtcy9iNGEzMzA5NC1mZTBhLTRkNGEtOTg0Ny1mNzU5MzQ2M2U2MWIiLCJhdWQiOiJhY2NvdW50Iiwic3ViIjoiZjExODNmMzEtYzBkZS00MTM1LWFhNGItZmFlODNjYjg1NDM1IiwidHlwIjoiQmVhcmVyIiwiYXpwIjoiZnJvbnRlbmQiLCJub25jZSI6ImIwYjE5MDRiLWQwMWQtNDczOS04MTE5LTljMjBlODJjMDE1NCIsInNlc3Npb25fc3RhdGUiOiIyOTFkOWM3Yy00Yjc2LTQ4ZDUtYWI5YS1lZDUwMzY4MzIxZTciLCJhY3IiOiIwIiwiYWxsb3dlZC1vcmlnaW5zIjpbImh0dHBzOi8vcGxheWdyb3VuZC5wbGVhc2Utb3Blbi5pdCJdLCJyZWFsbV9hY2Nlc3MiOnsicm9sZXMiOlsib2ZmbGluZV9hY2Nlc3MiLCJ1bWFfYXV0aG9yaXphdGlvbiIsImRlZmF1bHQtcm9sZXMtYjRhMzMwOTQtZmUwYS00ZDRhLTk4NDctZjc1OTM0NjNlNjFiIl19LCJyZXNvdXJjZV9hY2Nlc3MiOnsiYWNjb3VudCI6eyJyb2xlcyI6WyJtYW5hZ2UtYWNjb3VudCIsIm1hbmFnZS1hY2NvdW50LWxpbmtzIiwidmlldy1wcm9maWxlIl19LCJmcm9udGVuZCI6eyJyb2xlcyI6WyJ0b2RvX3VzZXIiXX19LCJzY29wZSI6Im9wZW5pZCBlbWFpbCBwcm9maWxlIiwic2lkIjoiMjkxZDljN2MtNGI3Ni00OGQ1LWFiOWEtZWQ1MDM2ODMyMWU3IiwiZW1haWxfdmVyaWZpZWQiOmZhbHNlLCJwcmVmZXJyZWRfdXNlcm5hbWUiOiJ1c2VyLTEifQ.BVhODHVV034urSARh7vx51MlGnsoOn_Jzp0E_TzvifezjFadm50KiZiBA0u1eXNJKWRspAsUbrp2JB8rwG3q3tjeJRGjeSMqjpGy6CcePIgc7TY3g2GGUWKclZaI-VBGyUHTzjpRzdGmlpjdbBLhGVKOhcGHl7VdSt45BAo1lscmtEUrrgcnCNxKkjtEK1E2VBYdA_HemjCyAXWmHSBnIqik7h4xl3SBLs_CDGuhRvSxUN7h0bB3tHtZTgabvyzFUWFeI5HN26ach7TQaCjlzLD9vI2-xQRqYHkTl4MvocsbWhU3nECBDp_he3Ph6Bxc81f-vcxyPN4HG0RpUawYgw"
$TOKEN
export TOKEN="<paste token here>"\
\
curl http://localhost:3000/todos -X POST \\
     -H "Authorization: Bearer $TOKEN"   \\
     -H "Content-Type: application/json" \\
     -d '{"task": "learn how to auth"}'
export TOKEN="<paste token here>"\
\
curl http://localhost:3000/todos -X POST \\
     -H "Authorization: Bearer $TOKEN"   \\
     -H "Content-Type: application/json" \\
     -d '{"task": "learn how to auth"}'
export TOKEN="eyJhbGciOiJSUzI1NiIsInR5cCIgOiAiSldUIiwia2lkIiA6ICJuY2g1N1RFeDVMeEJVRDBlWmZIc3dZVHpoSjN6YUY1QXJMUGQyVDQwSFhzIn0.eyJleHAiOjE2NDE4MzQ2MjgsImlhdCI6MTY0MTgzNDMyOCwiYXV0aF90aW1lIjoxNjQxODMzODM5LCJqdGkiOiI1YmMwMmYwYS04YTRjLTRkMWMtOWFkZi00MTUzNWFhNDFjOTMiLCJpc3MiOiJodHRwczovL2FwcC5wbGVhc2Utb3Blbi5pdC9hdXRoL3JlYWxtcy9iNGEzMzA5NC1mZTBhLTRkNGEtOTg0Ny1mNzU5MzQ2M2U2MWIiLCJhdWQiOiJhY2NvdW50Iiwic3ViIjoiZjExODNmMzEtYzBkZS00MTM1LWFhNGItZmFlODNjYjg1NDM1IiwidHlwIjoiQmVhcmVyIiwiYXpwIjoiZnJvbnRlbmQiLCJub25jZSI6ImIwYjE5MDRiLWQwMWQtNDczOS04MTE5LTljMjBlODJjMDE1NCIsInNlc3Npb25fc3RhdGUiOiIyOTFkOWM3Yy00Yjc2LTQ4ZDUtYWI5YS1lZDUwMzY4MzIxZTciLCJhY3IiOiIwIiwiYWxsb3dlZC1vcmlnaW5zIjpbImh0dHBzOi8vcGxheWdyb3VuZC5wbGVhc2Utb3Blbi5pdCJdLCJyZWFsbV9hY2Nlc3MiOnsicm9sZXMiOlsib2ZmbGluZV9hY2Nlc3MiLCJ1bWFfYXV0aG9yaXphdGlvbiIsImRlZmF1bHQtcm9sZXMtYjRhMzMwOTQtZmUwYS00ZDRhLTk4NDctZjc1OTM0NjNlNjFiIl19LCJyZXNvdXJjZV9hY2Nlc3MiOnsiYWNjb3VudCI6eyJyb2xlcyI6WyJtYW5hZ2UtYWNjb3VudCIsIm1hbmFnZS1hY2NvdW50LWxpbmtzIiwidmlldy1wcm9maWxlIl19LCJmcm9udGVuZCI6eyJyb2xlcyI6WyJ0b2RvX3VzZXIiXX19LCJzY29wZSI6Im9wZW5pZCBlbWFpbCBwcm9maWxlIiwic2lkIjoiMjkxZDljN2MtNGI3Ni00OGQ1LWFiOWEtZWQ1MDM2ODMyMWU3IiwiZW1haWxfdmVyaWZpZWQiOmZhbHNlLCJwcmVmZXJyZWRfdXNlcm5hbWUiOiJ1c2VyLTEifQ.BVhODHVV034urSARh7vx51MlGnsoOn_Jzp0E_TzvifezjFadm50KiZiBA0u1eXNJKWRspAsUbrp2JB8rwG3q3tjeJRGjeSMqjpGy6CcePIgc7TY3g2GGUWKclZaI-VBGyUHTzjpRzdGmlpjdbBLhGVKOhcGHl7VdSt45BAo1lscmtEUrrgcnCNxKkjtEK1E2VBYdA_HemjCyAXWmHSBnIqik7h4xl3SBLs_CDGuhRvSxUN7h0bB3tHtZTgabvyzFUWFeI5HN26ach7TQaCjlzLD9vI2-xQRqYHkTl4MvocsbWhU3nECBDp_he3Ph6Bxc81f-vcxyPN4HG0RpUawYgw"
clear
curl http://localhost:3000/todos -X POST \\
     -H "Authorization: Bearer $TOKEN"   \\
     -H "Content-Type: application/json" \\
     -d '{"task": "learn how to auth"}'
curl http://localhost:3000/todos -X PATCH \\
     -H "Authorization: Bearer $TOKEN"    \\
     -H "Content-Type: application/json"  \\
     -d '{"done": true}'
export TOKEN="eyJhbGciOiJSUzI1NiIsInR5cCIgOiAiSldUIiwia2lkIiA6ICJuY2g1N1RFeDVMeEJVRDBlWmZIc3dZVHpoSjN6YUY1QXJMUGQyVDQwSFhzIn0.eyJleHAiOjE2NDE4MzU0NDcsImlhdCI6MTY0MTgzNTE0NywiYXV0aF90aW1lIjoxNjQxODMzODM5LCJqdGkiOiI2ODQxNzcwOS03OGJhLTQ5YjctOWM5MC03NjM5N2E5YzZjZGIiLCJpc3MiOiJodHRwczovL2FwcC5wbGVhc2Utb3Blbi5pdC9hdXRoL3JlYWxtcy9iNGEzMzA5NC1mZTBhLTRkNGEtOTg0Ny1mNzU5MzQ2M2U2MWIiLCJhdWQiOiJhY2NvdW50Iiwic3ViIjoiZjExODNmMzEtYzBkZS00MTM1LWFhNGItZmFlODNjYjg1NDM1IiwidHlwIjoiQmVhcmVyIiwiYXpwIjoiZnJvbnRlbmQiLCJub25jZSI6ImFhOTY0MGM0LTBmY2ItNGM2ZC05ZjRjLTgxMDlhYzY1ZmVkMSIsInNlc3Npb25fc3RhdGUiOiIyOTFkOWM3Yy00Yjc2LTQ4ZDUtYWI5YS1lZDUwMzY4MzIxZTciLCJhY3IiOiIwIiwiYWxsb3dlZC1vcmlnaW5zIjpbImh0dHBzOi8vcGxheWdyb3VuZC5wbGVhc2Utb3Blbi5pdCJdLCJyZWFsbV9hY2Nlc3MiOnsicm9sZXMiOlsib2ZmbGluZV9hY2Nlc3MiLCJ1bWFfYXV0aG9yaXphdGlvbiIsImRlZmF1bHQtcm9sZXMtYjRhMzMwOTQtZmUwYS00ZDRhLTk4NDctZjc1OTM0NjNlNjFiIl19LCJyZXNvdXJjZV9hY2Nlc3MiOnsiYWNjb3VudCI6eyJyb2xlcyI6WyJtYW5hZ2UtYWNjb3VudCIsIm1hbmFnZS1hY2NvdW50LWxpbmtzIiwidmlldy1wcm9maWxlIl19LCJmcm9udGVuZCI6eyJyb2xlcyI6WyJ0b2RvX3VzZXIiXX19LCJzY29wZSI6Im9wZW5pZCBlbWFpbCBwcm9maWxlIiwic2lkIjoiMjkxZDljN2MtNGI3Ni00OGQ1LWFiOWEtZWQ1MDM2ODMyMWU3IiwiZW1haWxfdmVyaWZpZWQiOmZhbHNlLCJwcmVmZXJyZWRfdXNlcm5hbWUiOiJ1c2VyLTEifQ.ISSrPXnsvFjl-szkG4QFu6-N-b2XfzArmpt5gCYl22PiGd0XAgsNSZEw-sXbAr2SbbmEDCWagntPISJsOhYpL7tUWBv_fP8lFx-gtVBaJ5tVv2pjUmqPIRsxSzJgmOiGT6SJsGPsG7IL8X_Ek-O9-9ubnL10C_vx2cqW3kWFJczjHtHojypat4nFN--VdieAk2Cwr63lRcj4vUpgk40tUxuIBr4VaKucAlk5wXWqet7QcmCU-J_BNTyy7ZoJVtLBOWlsxYItDM8Mhqsw9BBhPB8xIRxD_Bx2GNdunijql6uOMBBFR_lRKeD-AxPIAYCPydM7XT6Xz4i8Lvy6TcNXTA"
curl http://localhost:3000/todos -X POST \\
     -H "Authorization: Bearer $TOKEN"   \\
     -H "Content-Type: application/json" \\
     -d '{"task": "learn how to auth"}'
curl http://localhost:3000/todosx -X POST \\
     -H "Authorization: Bearer $TOKEN"   \\
     -H "Content-Type: application/json" \\
     -d '{"task": "learn how to auth"}'
sudo docker ps
sudo docker ps -a
sudo docker rm 0ac39cf943ad d3a062cd7499
clear
sudo docker ps -a
sudo docker exec -it psql -U postgres
sudo docker exec -it chatty_db_1 psql -U postgres
clear
sudo docker ps -a
sudo docker exec -it chatty_db_1 psql -U postgres
cd Development/node/koa/chatty
clear
docker-compose up
sudo docker-compose up
sudo docker-compose up
warp-cli connect
warp-cli connect
warp-cli connect
warp-cli connect
warp-cli disconnect
sudo warp-svc
sudo warp-svc
warp-cli connect
warp-cli disconnect
yarn add react react-dom
yarn init -y
yarn add --dev parcel
yarn create react-app . --template typescript
cleear
cleaer
clear
 yarn create vite
clear
yarn install
clear
yarn dev
yarn dev
$ yarn add react-router-dom@6
yarn add react-router-dom@6
clear
yarn run start
yarn install
yarn install
clear
yarn run dev
yarn run start
yarn install
clear
yarn add @stitches/react
clear
yarn run start
warp-cli connect
warp-cli disconnect
warp-cli connect
warp-cli connect
warp-cli connect
warp-cli connect
warp-cli disconnect
sudo warp-svc
sudo warp-svc
yarn run start
yarn run start
clear
yarn install
clear
yarn run start
clear
yarn run start
warp-cli connect
warp-cli disconnect
sudo warp-svc
sudo warp-svc
warp-cli connect
warp-cli disconnect
warp-cli connect
warp-cli disconnect
yarn run dev
clear
git add .
git commit -m "successful start"
clear
git commit -m "successful start"
git status
clear
yarn add styled-components
git add .
git commit --amend
clear
yarn add styled-components
yarn add styled-components
yarn run dev
yarn create next-app tutorial -e with-typescript
yarn create next-app tutorial --typescript
sudo warp-svc
sudo warp-svc
sudo warp-svc
sudo warp-svc
clear
warp-cli connect
warp-cli connect
warp-cli connect
warp-cli connect
warp-cli connect
warp-cli connect
warp-cli disconnect
warp-cli connect
warp-cli disconnect
warp-cli disconnect
warp-cli disconnect
warp-cli connect
warp-cli disconnect
warp-cli disconnect
warp-cli connect
warp-cli connect
warp-cli disconnect
sudo warp-svc
rustc -v
rustup -v
curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh\

rustc src/1.\ dtypes.rs
rustc src/1_dtypes.rs
rustc src/5_structs.rs
rustc src/5_structs.rs
./5_structs
rustc src/5_structs.rs
cargo init
cargo init
sudo apt update
sudo apt upgrade
yarn run dev
sudo warp-svc
clear
yarn run dev
yarn add --dev sass
git add .
git commit -m 'restructure app'
clear
y
yarn run dev
yarn add @radix-ui/react-icons import { Cross2Icon } from "@radix-ui/react-icons";\
yarn add @radix-ui/react-icons @radix-ui/react-dialog
clear
yarn add @radix-ui/react-icons @radix-ui/react-dialog
yarn run dev
yarn add swiper
yarn run dev
yarn install
yarn remove swiper
yarn add swiper@7
yarn install
yarn run dev
yarn run dev
warp-cli connect
warp-cli connect
warp-cli connect
warp-cli disconnect
warp-cli connect
warp-cli disconnect
warp-cli connect
warp-cli connect
warp-cli disconnect
warp-cli connect
warp-cli disconnect
sudo warp-svc
sudo systemctl status warp-svc
warp-cli connec
warp-cli connect
cat /etc/group | grep docker
usermod -h
sudo usermod -h
sudo usermod -aG docker
sudo usermod -a -G docker
sudo usermod -a -G docker raven
docker ps
docker ps
docker ps
sudo apt update
sudo apt upgrade
sudo apt update
sudo apt upgrade
npm install -g @medusajs/medusa-cli
sudo apt install redis
yarn create medusa-app medusa-tutorial
clear
warp-cli connect
warp-cli disconnect
yarn install
yarn run start
yarn run start
yarn run start
yarn install
yarn run seed
yarn run seed
yarn run start
yarn run start
warp-cli connect
warp-cli disconnect
warp-cli connect
warp-cli disconnect
git clone https://github.com/LunarVim/Neovim-from-scratch.git
vi init.lua
lua
sudo apt install lua
nvim --version
cd lua
mv user raven
ls
cd ..
ls
vi init.lua
vi init.lua
nvim init.lua
clear
vi lua/raven/options.lua
sudo apt install neovim
sudo apt autoremove
clear
sudo apt remove neovim
ls
curl -LO https://github.com/neovim/neovim/releases/latest/download/nvim.appimage\
chmod u+x nvim.appimage
sudo mv nvim.appimage /usr/local/bin
nvim
nvim.appimage init.lua
CUSTOM_NVIM_PATH=/usr/local/bin/nvim.appimage
CUSTOM_NVIM_PATH
CUSTOM_NVIM_sPATH
set -u
q
q
Z
Z
q
ZZZ
r
ZZZ
"${CUSTOM_NVIM_PATH}"
echo ${CUSTOM_NVIM_PATH}
set CUSTOM_NVIM_PATH=/usr/local/bin/nvim.appimage
echo ${CUSTOM_NVIM_PATH}
echo $CUSTOM_NVIM_PATH
echo "helP"
sudo update-alternatives --install /usr/bin/ex ex "${CUSTOM_NVIM_PATH}" 110
sudo update-alternatives --install /usr/bin/ex ex "${CUSTOM_NVIM_PATH}" 110
set s=d
s
CUSTOM_NVIM_PATH=/usr/local/bin/nvim.appimage
set | grep CUSTOM
sudo update-alternatives --install /usr/bin/ex ex "${CUSTOM_NVIM_PATH}" 110
ex kajdsf
set -u
sudo update-alternatives --install /usr/bin/vi vi "${CUSTOM_NVIM_PATH}" 110\
sudo update-alternatives --install /usr/bin/view view "${CUSTOM_NVIM_PATH}" 110\
sudo update-alternatives --install /usr/bin/vim vim "${CUSTOM_NVIM_PATH}" 110\
sudo update-alternatives --install /usr/bin/vimdiff vimdiff "${CUSTOM_NVIM_PATH}" 110
ZZ
q
vi lua.jit
vi init.lua
clear
git checkout 02-keybinding
git checkout 02-keybindings
git checkout 02-keymaps
git add .
git commit -m "updated namespace:\
"
clear
git checkout 02-keymaps
ls
cd lua
ls
cd user
vi keymaps.lua
vi keymaps.lua
clear
git checkout 03-plugins
git stash
git checkout 03-plugins
ls
vi plugins.lua
git branches
git branch --help
git branch --list
git checkout 04-colorschemes
git checkout 04-colorscheme
clear
vi lua/user/colorscheme.lua
vi lua/user/plugins.lua
vi lua/user/plugins.lua
vi lua/user/colorscheme.lua
vi lua/user/colorscheme.lua
clear
ls
git checkout 05-completion
git stash
git checkout 05-completion
vi init.lua
vi lua/user/cmp.lua
vi  lua/user/plugins.lua
vi  lua/user/plugins.lua
vi lua/user/cmp.lua
clear
git checkout .
clear
git status
git checkout 06-LSP
clear
clear
vi lua/user/lsp
vi lua/user/plugins.lua
vi lua/user/plugins.lua
clear
vi lua/user/lsp
git checkout 07-Telescope
vi lua/user/plugins.lua
clear
git checkout 08-treesitter
vi lua/user/plugins.lua
vi lua/user/plugins.lua
vi lua/user/plugins.lua
vi tmp.py
git branch --list
git remote --verbose
git checkout 09-autopairs
clear
vi lua/user/plugins.lua
vi lua/user/plugins.lua
git checkout 10-comments
git checkout 10-comment
git checkout .
git checkout 10-comments
clear
vi lua/user/plugins.lua
vi lua/user/comment.lua
git checkout 12-nvimtree
vi lua/user/comment.lua
vi lua/user/plugins.lua
vi lua/user/plugins.lua
sudo apt install stow
clear
ls
mkdir dotfiles
cd dotfiles
mkdir git
cd git
cd ..
cd ..
ls -a | grep git
vi .gitconfig
mv .gitconfig dotfiles/git
cd dotfiles/git
clear
ls
ls -a
cd ..
stow --verbose --no git
stow git
cd .
ls -a | grep .git
cd ~
ls -a | grep .git
ls -l | grep .git
ls -la | grep .git
cd dotfiles
cd git
mkdir -p .config/git
mv .gitconfig .config/git
ls
ls -a
cd .config
cd //
cd //
cd ..
cd~
clear
cd 
cd dotfiles
stow --verbose --no git 
warp-cli connect
clear
warp-cli disconnect
ln -s themes/gruvbox_dark.conf theme.conf
vi colorscheme.lua
vi colorscheme.lua
vi colorscheme.lua
vi colorscheme.lua
vi ~/.config/nvim/lua/user/colorscheme.lua
vi ~/.config/nvim/lua/user/colorscheme.lua
stow */
vi init.lua
vi init.lua
vi init.lua
vi init.lua
vi lua/raven/telescope.lua
vi lua/raven/lsp/lsp-installer.lua
vi lua/raven/lsp/lsp-installer.lua
vi lua/raven/telescope.lua
vi lua/raven/lsp/lsp-installer.lua
vi lua/raven/lsp/lsp-installer.lua
clear
vi init.lua
vi init.lua
vi init.lua
vi init.lua
vi lua/raven/telescope.lua
vi init.lua
date
vi .
clear
vi Development/node/nest/tutorial
nvim
vim
vi
vi .config/nvim/lua/raven/plugins.lua
yarn init -y
vi tutorial
vi tutorial
clear
cd tutorial
vi .
sh -c "$(curl -sSfL https://release.solana.com/LATEST_RELEASE/install)"\

sh -c "$(curl -sSfL https://release.solana.com/LATEST_RELEASE/install)"
sh -c "$(curl -sSfL https://release.solana.com/stable/install)"
solana --version
sh -c "$(curl -sSfL https://release.solana.com/stable/install)"
vi .zshenv
solana --version
yarn install
yarn install
yarn install
 clear
yarn run dev
yarn run dev
clear
yarn add @solana/web3.js\
@solana/spl-token @solana/wallet-adapter-wallets \\
    @solana/wallet-adapter-base
clear
clear
yarn add @solana/wallet-adapter-wallets \\
    @solana/wallet-adapter-base
clar
clear
yarn add @solana/spl-token @solana/wallet-adapter-react
r
yarn add @solana/spl-token @solana/wallet-adapter-react
clear
yarn run dev
clear
vi .
kjjkjjkjjkjk
2\2
yarn some
jjkj
cd .config/nvim
clear
ls
cd lua/raven
clear
ls
vi alpha.lua
vi impatient.lua
vi lualine.lua
vi project.lua
vi keymaps.lua
vi lsp
vi lsp/init.lua
vi lsp/handlers.lua
vi lsp/lsp-installer.lua
clear
ls
vi nvim-tree.lua
vi indentline.lua
vi indentline.lua
vi indentline.lua
vi toggleterm.lua
vi toggleterm.lua
cd .config/nvim
cd lua/raven
ls
vi toggleterm.lua
\:q
vi .config/nvim/lua/raven/whichkey.lua
vi .
ts-node str2obj.ts
yarn add ts-node
ts-node str2obj.ts
yarn install
yarn add typescript
tsc -v
tsc -v
vi package.json
./node_modules/ts-node/dist
./node_modules/ts-node/node16/
./node_modules/typescript/bin/tsc -v
tsc
cd node_modules/ts-node/node16
ls
cd ..
ls
cd transpilers
ls
cd ..
clear
ls
cd dist
ls
./bin.js
clear
yarn global add ts-node typescript
yarn global add @types/node
ts-node -v
yarn global bin
vi ~/.zshenv
ts-node -v
ts-node str2obj.ts
ts-node str2obj.ts
ts-node str2obj.ts
ts-node str2obj.ts
ts-node str2obj.ts
ts-node str2obj.ts
ts-node str2obj.ts
ts-node str2obj.ts
ts-node str2obj.ts
ts-node str2obj.ts
ts-node str2obj.ts
clear
ts-node str2obj.ts
ts-node str2obj.ts
clear
clear
ts-node str2obj.ts
ts-node str2obj.ts
ts-node str2obj.ts
ts-node str2obj.ts
ts-node str2obj.ts
ts-node str2obj.ts
ts-node str2obj.ts
ts-node str2obj.ts
ts-node str2obj.ts
ts-node str2obj.ts
ts-node str2obj.ts
clear
clear
ts-node str2obj.ts
ts-node str2obj.ts
ts-node str2obj.ts
ts-node str2obj.ts
clear
ts-node str2obj.ts
ts-node str2obj.ts
vi .
vi .
vi .
ts-node str2obj.ts
cd .config/nvim/lua/raven
ls
cd .config/nvim/
ls
cd lua/raven/
vi plugins.lua
vi plugins.lua
vi copilot.lua
vi project.lua
vi copilot.lua
rm copilot.lua
clear
vi cmp.lua
d
cd .config/nvim/
vi init.lua
vi init.lua
vi lua/raven/copilot.lua
vi lua/raven/copilot.lua
vi lua/raven/plugins.lua
vi lua/raven/project.lua
vi lua/raven/project.lua
vi lua/raven/alpha.lua
vi lua/raven/cmp.lua
clear
vi lua/raven/cmp.lua
vi lua/raven/alpha.lua
fg
clear
warp-cli connect
warp-cli disconnect
sudo apt install sml
sudo apt install smlng
sudo apt install smlnj
sml
ls
vi 3_our_first_program.sml
warp-cli connect
clear
sudo apt update
sudo apt upgrade
cd .config/nvim/
clear
ls
cd lua/raven
ls
vi lsp
clear
cd ~/Development/web-dev/next
clear
ls
yarn create next-app --typescript
clar
clear
cd tutorial
vi
vi ~/.config/nvim/lua/raven/lsp/lsp-installer.lua
vi .
vi ~/.config/nvim/lua/raven/lsp/lsp-installer.lua
vi ~/.config/nvim/lua/raven/lsp/lsp-installer.lua
vi .
clear
vi  .
cd ~/.config/nvim/lua/raven
vi toggleterm.lua
vi toggleterm.lua
date

date
yarn
yarn run 
clear
  clear
clear
warp-cli connect
warp-cli connect
warp-cli connect
warp-cli connect
warp-cli disconnect
warp-cli connect
cd ~/.config/nvim/lua/raven
clear
vi lsp
clear
warp-cli connect
warp-cli disconnect
warp-cli connect
warp-cli disconnect
git add .
git commit -m "stuff"
git config --global user.email "ravenredstain@outlook.com"
git config --global user.name Raven Redstain
git add .
git commit -m "stuff"
clear
cd Development/web-dev/react/t
cd Development/web-dev/react/tutorial
vi .
vi .
cd Development/rust
clear
ls
vi guessing-game
mkdir guessing-game
rm guessing-game
rmdir guessing-game
clear
cargo new guessing-game
cd guessing-game
vi .
cargo run
cargo build
cargo run
cargo run 
clear
cargo run
cargo build
cargo build
clear
cargo build
cargo run
clear
cargo run
clear
cargo run
clear
git add .
git commit -m "game done"
cd Development/rust/tutorial
vi .
cargo check
vi Development/rust/tutorial
fg
cd Development/rust/tutorial
vi .
sudo apt remove transmission
sudo apt autoremove
clear
sudo apt install qbittorent
sudo apt install qbittorrent
warp-cli connect
warp-cli disconnect
warp-cli connect
warp-cli connect
clear
cd Development/web-dev
clear
ls
mkdir vanilla-template
cd vanilla-template
yarn init -y
yarn add --dev parcel
clear
ls
vi .
vi .
yarn run start
yarn run start
vi src/index.html
clear
yarn run start
yarn add --dev vite @vitejs/plugin-legacy
yarn add --dev vite @vitejs/plugin-legacy
yarn remove parcel
yarn remove parcel
clear
yarn run start
yarn add global @nestjs/cli
yarn global add @nestjs/cli
nest -v
nest new tutorial
warp-cli connect
vi tutorial
warp-cli disconnect
warp-cli connect
warp-cli connect
warp-cli connect
warp-cli connect
warp-cli connect
warp-cli connect
warp-cli disconnect
warp-cli connect
warp-cli connect
warp-cli disconnect
warp-cli connect
warp-cli connect
warp-cli disconnect
warp-cli connect
warp-cli disconnect
warp-cli connect
warp-cli connect
warp-cli connect
warp-cli connect
warp-cli connect
warp-cli connect
warp-cli disconnect
warp-cli disconnect
curl -X 'POST' http://localhost:3000/cats
curl -X 'POST' http://localhost:3000/cats
clear
curl -X 'POST' http://localhost:3000/cats -data name:pussy
curl -X 'POST' http://localhost:3000/cats -data "name":"pussy"
curl -X 'POST'  -data "name":"pussy" http://localhost:3000/cats
curl --help
curl -X 'POST'  -data {"name":"pussy"} http://localhost:3000/cats
curl -X 'POST'  -d {"name":"pussy"} http://localhost:3000/cats
curl -X 'POST'  -d "name":"pussy" http://localhost:3000/cats
curl -X 'POST'  -d "name"="pussy" http://localhost:3000/cats
nest g
nest g controller cats
clear
yarn run start
yarn run start
yarn run start:dev
curl -X 'POST' -d "name":"franki" http://localhost:3000/cats
curl -X 'POST' -h 'content-type'='application/json' -d {"name":"franki"} http://localhost:3000/cats
curl -X 'POST' -H 'content-type'='application/json' -d {"name":"franki"} http://localhost:3000/cats
clear
curl -h
curl -h all
curl -h all  | grep -H
curl -h all  | grep '-H'
curl -h all  | grep "-H"
curl -h all  | grep "header"
curl -X 'POST' -H 'content-type:application/json' -d {"name":"franki"} http://localhost:3000/cats
curl -X 'POST' -H 'content-type:application/json' -d "name":"franki" http://localhost:3000/cats
curl -X 'POST' -H 'content-type:application/json' -d {"name":"franki"} http://localhost:3000/cats
curl -X 'POST' -H 'content-type:application/json' -d '{"name":"franki"}' http://localhost:3000/cats
curl -X 'POST' -H 'content-type:application/json' -d '{"name":"franki"}' http://localhost:3000/cats
curl -X 'POST' -H 'content-type:application/json' -d '{"nae":"franki"}' http://localhost:3000/cats
nest g service cats
clear
nest g module cats
yarn install
clear
yarn run start:dev
yarn prisma
yarn prisma init
yarn prisma migrate dev --name changes
clear
nest g resource cats
clear
warp-cli connect
warp-cli diconnect
warp-cli disconnect
warp-cli connect
warp-cli disconnect
clear
yarn add @nestjs/typeorm typeorm
yarn run start:dev
yarn add sqlite3
clear
yarn run start:dev
yarn sqlite2
yarn sqlite3
yarn sqlite
clear
yarn run start:dev
yarn typeorm migration:create
yarn typeorm migration:create --name init
yarn typeorm migration:create --name init --dir src/database/migrations
yarn typeorm migration:run --dir src/database/migrations
yarn typeorm migration:run
yarn typeorm init --database sqlite
yarn typeorm migrations:run
clear
yarn run migration:generate
yarn run migration:generate tmp
yarn run migration:create new
yarn run migration:generate init
yarn run migration:run
cear
clear
yarn run start:dev
clear
node ./temp.js
node ./tmp.js
node ./tmp.js
git checkout templte
git checkout -b template
git init
git checkout -b template
clear
clear
git add .
git commit -m "chore: initial commit"
nest new tutorial
nest g resource users
clear
yarn add@nestjs/swagger swagger-ui-express
yarn add @nestjs/swagger swagger-ui-express
git add .
clear
yarn add @nestjs/typeorm typeorm sqlite
yarn add @nestjs/typeorm typeorm sqlite4
yarn add @nestjs/typeorm typeorm sqlite4
yarn add @nestjs/typeorm typeorm sqlite3
yarn run start:dev
clear
clear
yarn run start:dev
yarn run start:dev
clear
yarn build
yarn run start:dev
clear
yarn prebuild
clear
git add .
git commit -m "initial commit"
clear
clear
yarn run build
yarn run start:de
yarn run start:dev
clear
yarn run start:dev
clear
yarn build
yarn start:dev
yarn build
yarn build
yarn start:dev
clear
yarn start:dev
clear
git add .
git commit -m "fix: swagger is working"
git add .
git commit --amend  -m "fix: swagger is working"
git log
clear
node ./tmp.js
node ./tmp.js
node ./tmp.js
node ./tmp.js
node ./tmp.js
node ./tmp.js
clear()\

clear
yarn start:dev
yarn start:dev
clear
warp-cli connect
sudo mv go /usr/local
sudo mv go /usr/local
sudo rm -rf /usr/local/go
sudo mv go /usr/local
clear
./build.sh linux server
sudo apt install go
clear
vi ~/.zshenv
./build.sh linux server
./out/linux-server/proxyscotch-server-linux-v0.0.1
./build.sh linux
./build.sh linux
./build.sh linux
ls
ls icons
vi icons/icon_unix.go
vi icons/icon_unix.go
vi main.go
clear
ls
ls
vi icons/icon_unix.go
./build.sh linux
go get github.com/cratonica/2goarray
go get github.com/cratonica/2goarray
go get -d
./build.sh linux
warp-cli disconnect
cd proxyscotch-master
ls
clear
go get
go get -d
curl "https://127.0.0.1/9159"
curl "https://127.0.0.1/9159/"
curl -X GET "https://127.0.0.1/9159/"
openssl x509 -in cert.pem -noout -text
/usr/share/ca-certificates
cd /usr/share/ca-certificates
clear
ls
ls -la
cd mozilla
ls
cd /etc/ssl/
clear
cd certs
ls
ls -l
openssl x509 -outform der -in cert.pem -out cert.der
sudo cp cert.pem /etc/ssl/certs
./Prox
ls
ls -l
chmod +x Proxywoman-Linux-v0.0.1
./Proxywoman-Linux-v0.0.1
sudo apt install gtk3
sudo apt install gtk3+
sudo apt install libappindicator3-1
./Proxywoman-Linux-v0.0.1
sudo apt install zenity qarma
sudo apt install zenity
./Proxywoman-Linux-v0.0.1
./Proxywoman-Linux-v0.0.1
cd Development/node/express/chegg-unlocker
cat package.json
yarn run dev
yarn install
yarn run dev
warp-cli connect
warp-cli disconnect
yarn version
yarn -v
yarn init -2
clear
yarn -v
yarn set version stable
corepack enable
corepack -v
git restore package.json
yarn -v
yarn set version stable
yarn -v
yarn init -v
yarn init -h
yarn init -i
clear
yarn install
clear
yarn run start:dev
clear
yarn init -i
clear
yarn set version stable
yarn set version stable
yarn init -i
clear
yarn -v
yarn init -i
yarn init -i
yarn -v
yarn init -2
clear
yarn add @nestjs/common @nestjs/core
yarn add rimraf sqlite3 typeorm swagger-ui-express reflect-metadata @nestjs/swager @nestjs/typeorm @nestjs/platform-express
yarn add rimraf sqlite3 typeorm swagger-ui-express reflect-metadata @nestjs/swagger @nestjs/typeorm @nestjs/platform-express
yarn 
clear
yarn run start:dev
yarn add @nestjs/swagger
yarn run start:dev
yarn add @nestjs/mapped-types rxjs
clear
yarn -v
npm uninstall yarn
npm uninstall -g yarn
npm uninstall -g yarn
yarn -v
clear
yarn init -s
npm i -g yarn
clear
yarn -v
ls
yarn init -2
ls
yarn init
yarn -v
yarn -v
yarn init
yarn -v
yarn init -i
yarn init -h
clear
yarn init -2
clear
yarn run start:dev
yarn add swagger-ui-express
yarn run start:dev
clear
yarn -v
yarn install
clear
clear
nest start -h
clear
yarn run start:dev
clear
git add .
git commit -m cleanup
clear
yarn build
yarn install
git pull
git config pull.rebase false
clear
git pull
git status
clear
git remote
git remote 0v
git remote -v
clear
git restore .
clear
yarn build
yarn build
yarn clean
clear
vite -v
yarn vite -v
yarn dev
yarn lint
clear
yarn dev
yarn dev
yarn clean
yarn clean
clear
git add .
git commit -m "fix: npm script for build and dev"
git push
clear
yarn run dev
git restore .
clear
yarn run dev:eleventy
clear
yarn clean
clear
git -v
node -v
node -v
npm -i -g yarn
npm install -g  yarn
clear
yarn -v
dir
git clone https://github.com/xCodeR01/inspirer-website.git
clear
git clone https://github.com/xCodeR01/inspirer-website.git
ls
cd inspirer-website
clear
git commit
yarn run setup
yarn dev
git checkout -b header
git status
git add .
clear
git status
git commit 
git commit
git commit -m "feat: added a header"
clear
git status
git push
git push --set-upstream origin header
vi .config/zsh/.zshrc
nvim
nvim
vi .config/zsh/.zshrc
nvim
clear
git add .
git commit -m "chore: turn off dependabot"
chmod +x .husky/commit-msg .husky/pre-commit
clear
git push
git pull
clear
git status
git pull
git status
git commit
git commit -m
git commit -m "merge"
git add .
git commit -m "merge"
clear
git restore .
clear
git status
clear
git restore .
clear
git status
git commit
git commit
git config --global core.editor vscode
git commit
git config --global core.editor code --wait
git commit
clear
git push
clear
warp-cli connect
warp-cli disconnect
clear
yarn dev
warp=cli connect
warp-cli connect
warp-cli disconnect
java -v
java --version
sudo apt isntall openjdk
sudo apt install openjdk
sudo apt install openjdk-11-jdk
javac --version
clear
dev
deb
pkg
dpkg -l | grep java
jar
clear
./java --version
./javac --version
cd ..
clear
cd ..
clear
ls
cat /usr/local
ls /usr/local
sudo mv jdk-17.0.2 /usr/local
cd ..
clear
vi .zshenv
vi .zshenv
clear
javac -v
javac --version
apt help
man apt
clear
dpkg-query op
dpkg-query --list 
man dpkg-query 
dpkg-query --list "openjdk*"
sudo apt remove openjdk-11-*
sudo apt remove 'openjdk-11-*'
clear
java --version
vi .zshenv
ls
clear
cd Development
clear
vi Main.java
java Main.java
javac Main.java
vi Main.java
java Main.java
ls
ls -l
mv Main.java others/java
cd others/java
clear
mkdir tutorial
mv Main.java tutorial
clear
vi .
vi tutorial
cd .config/nvim
clear
ls
vi .
vi .
fg
fg
vi .
vi .
clear
vi .
vi .
vi .
vi .
vi .
clear
vi .
vi .
vi .
vi .
vi .
vi .
clear
cargo run
cargo install --locked trunk\
cargo install wasm-bindgen-cli
cargo check
clear
rustup show
rustup target add wasm32-unknown-unknown
cd Development/web-dev
clear
mkdir yew
cd yew
cargo new tutorial
vi tutorial
vi tutorial
vi tutorial
vi bulletproof-react
warp-cli connect
warp-cli connect
warp-cli disconnect
clear
ls
yarn run dev
warp-cli connect
clear
yarn run dev
clear
yarn dev
clear
git add .
git commit -m "fix: multi theme setup working"
clear
yarn dev
clear
git add .
git commit -m "fix: fixed staled mq listner in themecontext"
clear
yarn run dev
warp-cli connect
warp-cli connect
warp-cli connect
warp-cli disconnect
warp-cli connect
warp-cli disconnect
yarn run dev
cd Development/node/nest
git clone https://github.com/lujakob/nestjs-realworld-example-app.git
sudo apt update
warp-cli connect
sudo apt update
sudo apt upgrade
warp-cli disconnect
sudo apt upgrade
warp-cli connect
warp-cli connect
warp-cli disconnect
cd Development/web-dev/react/bulletproof-react
vi .
yarn remove web3
yarn set verstion stable
yarn version set stable
yarn use version stable
clear
yarn --version
yarn set
yarn init -2
yarn
\:q
cd Development/web-dev/react
vi dapp-tracker
ls
cp tutorial realworld-app
cp -r tutorial realworld-app
rsync -av --progress tutorial realworld-app --exclude node_modules/
clear
cd tutorial
rm -rf .git
cd .
cd ..
clear
cd realworld-app
clear
ls
rm -rf node_modules
cp -r tutorial/* .
ls
rm -rf tutorial
clear
c
clear
git init
git config --global init.defaultBranch master
ls
vi .
vi .
yarn dev
yarn
eslint
yarn eslint
yarn global add eslint
yarn init -2 realworld-app
yarn
yarn -v
clear
yarn -v
cd realworld-app
yarn init -2
yarn 
clear
yarn add react react-dom
clear
yarn remove @radix-ui
clear
yarn remove  @radix-ui/react-checkbox  @radix-ui/react-dropdown-menu  @radix-ui/react-switch  @radix-ui/react-dialog
clear
yarn remove swiper react-table react-select
clear
yarn remove @reduxjs/toolkit react-redux @types/react-table
clear
git add .
clear
git commit -m "chore: initial commit"
clear
git add .
git commit --amend
clear
yarn dev
clear
yarn run dev
yarn run dev
clear
yarn run dev
yarn build
serve -s dist/
cd ..
yarn --version
yarn global add serve
serve -v
cd realworld-app
clear
serve -s dist
clear
rm -rf dist
clear
git add .
git commit --amend
clear
clear
yarn eslint
clear
yarn dev
cd Development/web-dev/react
vi realworld-app
vi ~/.config/nvim/lua/raven/copilot.lua
vi realworld-app
vi ~/.config/nvim/lua/raven/copilot.lua
fg
vi ~/.config/nvim/lua/raven/cmp.lua
vi ~/.config/nvim/lua/raven/cmp.lua
vi ~/.config/nvim/lua/raven/cmp.lua
clear
vi realworld-app
clear
clear
yarn dev
clear
git add .
git commit -m "chore: added template for home and auth routes"
clear
clear
yarn run dev
clear
git add .
git commit -m "chore: bolted template with proper routing"
clear
vi .config/nvim/init.lua
cd dotfiles
ls
stow zsh
stow zsh
stow xfce4
stow xfce4
stow others
clear
stow nvim
stow kitty
some
cd dotfiles
ls
cd zsh/.config
ls
cd zsh
ls
cdlear
clear
cd .zprezto
ls
git submodule
cd modules
ls
zprezto-update
clear
cd .
cd. 
cd. 
cd ~/dotfiles
clear
git init
git commit -m "initial commit"
git add .
git rm --cached zsh/.config/zsh/.zprezto
git rm --cached zsh/.config/zsh/.zprezto -f
clear
ls
git status
clear
git submodule add https://github.com/sorin-ionescu/prezto.git zsh/.config/zsh/.zprezto
git add .
git commit -m 'initial commit'
clear
git remote add origin https://github.com/xCodeR01/dotfiles.git
git push -u origin master
CLEAR
clear
git pull
clear
git checkout -b development
git add .
clear
git commit -m "chore: update global styles"
clear
clear
clear
clear
yarn dev
clear
git add .
clear
git commit -m "chore: refactored header style and html"
git push
git push --set-upstream origin development
clear
